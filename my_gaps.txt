Тригонометрические функции (включая арк-)
Найти угол по значению синуса, косинуса и т.п. (угол от 0 до 90, т.к. дальше могут быть повторения)

list comprehension & dict comprehension (см. задание 3 лабораторной работы 095)
lambda-функции

коллаборативная фильтрация:
https://habr.com/ru/post/150399/
https://ru.wikipedia.org/wiki/%D0%9A%D0%BE%D0%BB%D0%BB%D0%B0%D0%B1%D0%BE%D1%80%D0%B0%D1%82%D0%B8%D0%B2%D0%BD%D0%B0%D1%8F_%D1%84%D0%B8%D0%BB%D1%8C%D1%82%D1%80%D0%B0%D1%86%D0%B8%D1%8F

Множества (set) и словари (dict) - это хеш-таблицы. Благодаря этому поиск по этим элементам не зависит от их размера. Почитать, как устроены хеш-таблицы.


Pandas вместо SQL: https://tproger.ru/translations/rewrite-sql-queries-in-pandas/

Presenting Code Using Jupyter Notebook Slides https://medium.com/@mjspeck/presenting-code-using-jupyter-notebook-slides-a8a3c3b59d67




data.info()
data.describe()
data.head(30)
data.tail(10)
len(data) | data.shape

data['category'].unique()
len(data['category'].unique()) | data['category'].nunique()

ratings.rating.value_counts(normalize=True)

data[['country', 'quantity']].head()

filtered_data.sort_values(by='quantity', ascending=False).head(50)
data.sort_values(by=['year', 'country', 'quantity'], ascending=[False, True, False]).head(50)

stats.columns = ['group', 'phrase', 'effect', 'ad_id', 'title', 'text', 'link']


.agg, .merge, .loc, .iloc, .str.contains